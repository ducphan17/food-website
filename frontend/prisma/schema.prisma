// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  isAdmin       Boolean @default(false)
  accounts      Account[]
  sessions      Session[]
 
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Category{
  id String @id @default(cuid())
  createAt DateTime @default(now())
  title String
  desc String
  color String
  img String
  slug String @unique
  order Int @default(0) 
  products Product[] // products since a category can have multiple products
}

model Product {
  id String @id @default(cuid())
  createAt DateTime @default(now())
  title String
  desc String
  img String? // image is not required
  price Decimal
  isFeatured Boolean @default(false) // don't need to fill this field so default
  options Json[]
  // a product can only belongs to one category
  category Category @relation(fields: [catSlug], references: [slug]) // fields catSlug is in Product model, references slug is in Category model
  catSlug String
}


model Order {
  id String @id @default(cuid())
  createAt DateTime @default(now())
  price Decimal
  // we will not store the product itself, but just information of the orders
  products Json[]
  status String
  intent_id String? @unique // Question mark indicates that it is not required

}



